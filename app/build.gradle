
plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
  //  id 'io.fabric.tools.gradle'
}

import java.io.FileInputStream 
import java.util.Properties
import java.io.File
def props = new Properties()
File keystoreProperties = rootProject.file("keystore.properties")
if (keystoreProperties.exists()) {
    props.load(new FileInputStream(keystoreProperties))
} else {
    props['keystorefile'] = 'none'
}

android {
    namespace 'android.zero'
    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    
        applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${parent.name}-${variant.name}-${variant.versionName}.apk"
        }
    }
    
    defaultConfig {
        applicationId "android.zero"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        
        vectorDrawables.useSupportLibrary = true
        
        buildConfigField "String", "LICENSE_KEY",  "$props.LICENSE_KEY"
        buildConfigField "String", "DROPBOX_CLIENT_ID",  "$props.DROPBOX_CLIENT_ID"
        buildConfigField "String", "DROPBOX_CLIENT_KEY",  "$props.DROPBOX_CLIENT_KEY"
        buildConfigField "String", "ONEDRIVE_CLIENT_ID",  "$props.ONEDRIVE_CLIENT_ID"
        buildConfigField "String", "ONEDRIVE_CLIENT_KEY",  "$props.ONEDRIVE_CLIENT_KEY"
        buildConfigField "String", "BOX_CLIENT_ID",  "$props.BOX_CLIENT_ID"
        buildConfigField "String", "BOX_CLIENT_KEY",  "$props.BOX_CLIENT_KEY"
        buildConfigField "String", "PLAYSTORE_LICENSE_KEY",  "$props.PLAYSTORE_LICENSE_KEY"
        buildConfigField "String", "MERCHANT_ID",  "$props.MERCHANT_ID"
        buildConfigField "boolean", "DEBUG", "false" 
        buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
        
        vectorDrawables { 
            useSupportLibrary true
        }
        
        tasks.withType(JavaCompile) {
        options.compilerArgs += [
            '-Xlint:deprecation',
            '-Xlint:unchecked'
        ]
    }
    
        
    }

    buildTypes {
      debug {
            minifyEnabled false
            shrinkResources false
            buildConfigField "boolean", "DEBUG", "true"
         //   useProguard false
          //  proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
               //     'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
           // useProguard true
           buildConfigField "boolean", "DEBUG", "false"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
        buildConfig true
        
    }
    
    
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        // 检查特定的规则
        checkOnly 'NewApi', 'InlinedApi', 'Performance', 'Security', 'Compatibility', 'Deprecated', 'MissingPermission', 'MissingFeature', 'RtlHardcoded', 'RtlEnabled', 'RtlSymmetry', 'IconMissingDensityFolder', 'Drawability'
disable 'NotificationIconCompatibility'
        // 是否在发现问题时终止构建
        abortOnError false

        // 是否生成文本报告
        textReport true

        // 输出到控制台
        textOutput 'stdout'

        // 生成 HTML 报告
     //   htmlReport true
      //  htmlOutput file("build/reports/lint-results.html")

        // 生成 XML 报告
       // xmlReport true
      //  xmlOutput file("build/reports/lint-results.xml")

        // 使用 lintConfig 指定 Lint 配置文件
        lintConfig file('lint.xml')

        // 是否忽略警告
        warningsAsErrors true

        // 是否在发布构建时运行 Lint
        checkReleaseBuilds true
    }

    
}

afterEvaluate {
    tasks.named('mergeDebugResources') {
        dependsOn(tasks.named('processDebugGoogleServices'))
    }}
dependencies {


    implementation 'org.nanohttpd:nanohttpd:+'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.jaredrummler:android-processes:1.1.1'
    implementation 'com.github.mjdev:libaums:0.5.5'
    implementation 'org.apache.ftpserver:ftpserver-core:1.1.1'
    implementation 'commons-net:commons-net:3.6'
    implementation 'com.zsoltsafrany:needle:1.0.0'
    implementation 'com.cloudrail:cloudrail-si-android:2.22.4'
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.mediarouter:mediarouter:1.0.0'
    implementation 'com.google.android.gms:play-services-cast-framework:17.0.0'
    implementation 'com.github.javiersantos:AppUpdater:2.6.5'
    implementation 'com.nanohttpd:nanohttpd:2.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4' // 或者最新的版本号
    
    debugImplementation 'androidx.multidex:multidex:2.0.1'
}
